#include &lt;stdio.h&gt;

#define MAX_BLOCKS 10
#define MAX_PROCESSES 10

void firstFit(int blockSize[], int blocks, int processSize[], int processes) {
int allocation[MAX_PROCESSES];

for (int i = 0; i &lt; processes; i++)
allocation[i] = -1;

for (int i = 0; i &lt; processes; i++) {
for (int j = 0; j &lt; blocks; j++) {
if (blockSize[j] &gt;= processSize[i]) {
allocation[i] = j;
blockSize[j] -= processSize[i];
break;
}
}
}

printf(&quot;\nProcess No.\tProcess Size\tBlock No.\n&quot;);
for (int i = 0; i &lt; processes; i++) {
printf(&quot; %d\t\t%d\t\t&quot;, i + 1, processSize[i]);
if (allocation[i] != -1)
printf(&quot;%d\n&quot;, allocation[i] + 1);
else
printf(&quot;Not Allocated\n&quot;);
}
}

int main() {
int blockSize[MAX_BLOCKS] = {100, 500, 200, 300, 600};
int processSize[MAX_PROCESSES] = {212, 417, 112, 426};
int blocks = 5, processes = 4;

firstFit(blockSize, blocks, processSize, processes);

return 0;
}

output :
process no.       process size        block no.
1                    212                  2
2                    417                  5
3                    112                  2
4                    426                  not allocated
